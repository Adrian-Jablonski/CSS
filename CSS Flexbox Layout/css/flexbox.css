/* ================================= 
  Flexbox
==================================== */

.flex-container {
    display: flex;
}

.flex-container-column {
    display: flex;
    flex-direction: column;
}

.flex-container-wrap {
    display: flex;
    flex-wrap: wrap;
}

.flex-container-justify {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}

/* ##### Flex container nav bar ##### */
.nav-item-1 {
    /* Useful for creating navigations when using with a flex-container that has justify-content set to space-between; */
    margin-right: auto;
}


/* ##### Flex container Order ##### */
.order-item-6 {
    /* Items have default values of 0 */
    /* Order is useful to use when creating media queries for different screen sizes */
    order: -2
}

.order-item-3 {
    order: -1;
}

.order-item-1 {
    order: 1;
}


.flex-container-grow {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

.item-grow {
    flex-grow: 1;
}

.grow-item-1 {
    flex-grow: 4;
}


.flex-basis-container {
    display: flex;
    flex-wrap: wrap;
}

.item-basis {
    /* flex-grow: 1;
    flex-basis: 200px;   */
    
    /* Will display items at an equal size when they are 200px or greater */ 
    flex: 1 200px;    /* Shorthand for flex grow and flex basis */
}

.basis-item-2 {
    flex-grow: 2;
}

.align-flex-container {
    display: flex;
    /* flex-wrap: wrap; */
    height: 450px;
    align-items: center;
}

.align-item-1 {
    align-self: flex-start;
}

.align-item-2 {
    align-self: flex-end;
}

.centering-flex-container {
    display: flex;
    min-height: 50vh;

    /* #### Method 1: Use justify-content and align-items center in flex container  ####*/
    /* justify-content: center; */
    /* align-items: center; */
}

.centering-item-4 {
    /* #### Method 2: Use justify-content in flex container and align-self center in item container  ####*/
    /* align-self: center; */
    
    /* #### Method 3: Use Margin auto in item container  ####*/
    margin: auto;
}
